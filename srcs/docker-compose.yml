
## version        of docker-compose.yml file
## services       is the containers that will be created

### container_name to specify the name of the container
### image         to download a image from docker hub which is forbidden in this project or to use a custom image
### build         to build a image from a Dockerfile
#### context      to specify the path of the Dockerfile
#### dockerfile   to specify the name of the Dockerfile

### volumes       to mount a volume from the host to the container
### networks      to specify the network of the container (bridge, host, none)
### depends on    to specify the dependencies of the container (which container must be created before this one)

### env_file      to specify the path of the .env file
### ports         to expose the port of the container to the host
### expose        to expose the port of the container to the other containers


## volumes        are the volumes that will be created for DATA PERSISTENCE
## networks       are the network that will be created

##############
#   Example  #
##############
# version: '3.8'
# services:
#   nginx:
#     image: nginx:stable-alpine
#     ports:
#       - 80:80
#     volumes:
#       - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf


# 3.8 is the last version that support 19.03.0+ Docker Engine
# see here for more details: https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3.8'

##########################
# scaffolding Containers #
##########################
# services are the containers that will be created
# services are the containers that will be created
services:

  mariadb:
    image:          mariadb                        # can be removed if build present
    container_name: mariadb
    build:
      context:      requirements/mariadb
      dockerfile:   Dockerfile

    volumes:
      -  mariadb:/var/lib/mysql
    env_file: .env

    networks:
      - inception
    expose:
      - "3306"

    restart: on-failure

  wordpress:
    image:          wordpress
    container_name: wordpress
    build:
      context:      requirements/wordpress
      dockerfile:   Dockerfile

    volumes:
    - wordpress:/var/www/wordpress
    env_file: .env

    networks:
      - inception
    depends_on:
      - mariadb
    expose:
      - "9000"

    restart: on-failure


  nginx:
    image:          nginx
    container_name: nginx
    build:
      context:      requirements/nginx
      dockerfile:   Dockerfile

    volumes:
      - wordpress:/var/www/wordpress
    env_file: .env

    networks:
      - inception
    depends_on:
      - wordpress
    ports:
      - "443:443"

    restart: on-failure


volumes:
  wordpress:
      driver: local                                    # storage driver
      driver_opts:
        type: 'none'                                     # type of volume
        o: 'bind'                                      # bind the volume to the host
        device: './data/wordpress'     # path to the folder on the host
  mariadb:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: './data/mariadb'

networks:
    inception:          # name of the network, driver can be bridge, host, none
      driver: bridge    # communication between container